//***************************************************************************
//code of assembly line

#include <bits/stdc++.h>
#define NUM_LINE 2
#define NUM_STATION 4
using namespace std;


std::vector< vector< pair <int,int> > > v(NUM_LINE,vector< pair<int,int> >(NUM_STATION+1,pair<int,int>()));

int path (int i,int j)
{
  if(j!=0)
    path(v[i][j].first,v[i][j].second ),printf("(%d,%d)\n",v[i][j].first+1,v[i][j].second+1 );
  return 0;
}

int Assembly(int a[][NUM_STATION], int t[][NUM_STATION], int *e, int *x){
    int T1[NUM_STATION], T2[NUM_STATION], i;

    T1[0] = e[0] + a[0][0]; 
    T2[0] = e[1] + a[1][0];

    
    for (i = 1; i < NUM_STATION; ++i)
    {
        if((T1[i-1] + a[0][i]) <(T2[i-1] + t[1][i] + a[0][i]))
        T1[i]=T1[i-1] + a[0][i],v[0][i]=make_pair(0,i-1);
        else T1[i]=T2[i-1] + t[1][i] + a[0][i],v[0][i]=make_pair(1,i-1);
        if((T2[i-1] + a[1][i])< (T1[i-1] + t[0][i] + a[1][i]))
        T2[i]=T2[i-1] + a[1][i],v[1][i]=make_pair(1,i-1);
        else T2[i]=T1[i-1] + t[0][i] + a[1][i],v[1][i]=make_pair(0,i-1);
    }
    cout<<"(Assembly line,station number)"<<endl;
if(T1[NUM_STATION-1] + x[0]< T2[NUM_STATION-1] + x[1])
    i=0;
    else i=1;
    path(i,NUM_STATION);
    return min(T1[NUM_STATION-1] + x[0], T2[NUM_STATION-1] + x[1]);
}

int main()
{
    int a[][NUM_STATION] = {{4, 5, 3, 2},
                            {2, 10, 1, 4}};
    int t[][NUM_STATION] = {{0, 7, 4, 5},
                            {0, 9, 2, 8}};
    int e[] = {10, 12}, x[] = {18, 7};
    v[0][0]=make_pair(0,-1);
    v[1][0]=make_pair(1,-1);
    v[0][NUM_STATION]=make_pair(0,NUM_STATION-1);
v[1][NUM_STATION]=make_pair(1,NUM_STATION-1);

  //  int p[4];
  //  int q[4];

    printf("\n\ntotal time taken: %d\n", Assembly(a, t, e, x));

    return 0;
}